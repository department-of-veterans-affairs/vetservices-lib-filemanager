<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>gov.va.ascent</groupId>
		<artifactId>ascent-libraries-parent</artifactId>
		<version>0.0.3-SNAPSHOT</version>
		<relativePath />  <!-- lookup parent from repository -->
	</parent>

	<groupId>gov.va.vetservices.lib</groupId>
	<artifactId>vetservices-lib-filemanager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>vetservices-lib-filemanager</name>
	<description>A library that provides common file management utilities for 
		image type detection, character encoding detection, 
		PDF creation and manipulation, and PDF “stamping”</description>

	<packaging>jar</packaging>

	<properties>
		<!-- file type detection and conversion -->
		<tika.version>1.17</tika.version>
		<jmimemagic.version>0.1.5</jmimemagic.version>
		<itext.version>7.1.2</itext.version>
		<itext-licensekey.version>2.0.4</itext-licensekey.version>
<!-- 
		<itext.version>2.1.7</itext.version>
		<itext.bcprov-jdk16.version>140</itext.bcprov-jdk16.version>
		<itext.bcmail-jdk16.version>140</itext.bcmail-jdk16.version>
 -->	</properties>

	<dependencies>
		<!-- Ascent dependencies -->
		<dependency>
			<groupId>gov.va.ascent</groupId>
			<artifactId>ascent-framework</artifactId>
			<version>0.0.5-SNAPSHOT</version>
		</dependency>

		<!-- spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<!-- file introspection and conversion dependencies -->
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>${tika.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jmimemagic</groupId>
			<artifactId>jmimemagic</artifactId>
			<version>${jmimemagic.version}</version>
		</dependency>
<!-- 
		<dependency>
			<groupId>bouncycastle</groupId>
			<artifactId>bcprov-jdk16</artifactId>
			<version>${itext.bcprov-jdk16.version}</version>
		</dependency>
		<dependency>
			<groupId>bouncycastle</groupId>
			<artifactId>bcmail-jdk16</artifactId>
			<version>${itext.bcmail-jdk16.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>${itext.version}</version>
			<exclusions>
				<exclusion>
					<groupId>bouncycastle</groupId>
					<artifactId>bcprov-jdk14</artifactId>
				</exclusion>
				<exclusion>
					<groupId>bouncycastle</groupId>
					<artifactId>bctsp-jdk14</artifactId>
				</exclusion>
				<exclusion>
					<groupId>bouncycastle</groupId>
					<artifactId>bcmail-jdk14</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
 -->
 <!-- https://mvnrepository.com/artifact/com.itextpdf/itext7-core -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itext7-core</artifactId>
			<version>${itext.version}</version>
			<type>pom</type>
		</dependency>
		<!-- ⬇ ︎license required for iText 7 prod ⬇    ⬇ scroll down for private repo entry ⬇ -->
		<!-- dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itext-licensekey</artifactId>
			<version>${itext-licensekey.version}</version>
		</dependency -->
		
 		<!-- pdfbox testing -->
<!-- 		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>2.0.9</version>
		</dependency>
 -->
		<!-- Apache Commons project dependencies -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<!-- version>${mockito-core.version}</version -->
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- ⬇ ︎license repo required for iText 7 prod ⬇    ⬆ scroll up for dependency ⬆︎ -->
	<!-- repositories>
		<repository>
			<id>itext</id>
			<name>iText Repository - releases</name>
			<url>https://repo.itextsupport.com/releases</url>
		</repository>
	</repositories -->

	<build>
		<plugins>
			<!-- disable spring-boot plugins, otherwise tries to make this module executable -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- Since JARs cannot be referenced directly as a schemaLocation,
				we have to unpack the framework schema from the ascent-framework JAR.
				This allows executions in the maven-jaxb2-plugin to function
				without regenerating the classes declared in the framework XSD.
				- ascent-framework classes are bound in jaxb-bindings.xjb
				- ascent-framework classes are referenced in filemanager-api.xsd
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpackXSDs</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>gov.va.ascent</groupId>
									<artifactId>ascent-framework</artifactId>
									<outputDirectory>${project.basedir}/src/main/resources/mvn-copied</outputDirectory>
									<includes>xsd/ascent-framework-types.xsd</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--
				JAXB/XJC config to generate resource data model classes,
				including jsr303 custom validator annotation classes from the modelvalidators project
			-->
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>${maven.jaxb2.plugin.version}</version>
				<configuration>
					<schemaIncludes>
						<schemaInclude>**/*.xsd</schemaInclude>
					</schemaIncludes>
					<bindingDirectory>${project.basedir}/src/main/resources</bindingDirectory>
					<bindingIncludes>
						<include>model/jaxb-bindings.xjb</include>
					</bindingIncludes>
					<strict>false</strict>
					<extension>true</extension>
					<args>
						<!-- maven-jaxb2-plugin args -->
						<arg>-no-header</arg>
						<!-- krasa-jaxb-tools args -->
						<arg>-XReplacePrimitives</arg>
						<arg>-XJsr303Annotations</arg>
					</args>
					<plugins>
						<!-- Enable JSR303 annotations.
							Args used:
							-XReplacePrimitives
							-XJsr303Annotations
						-->
						<plugin>
							<groupId>com.github.krasa</groupId>
							<artifactId>krasa-jaxb-tools</artifactId>
							<version>${krasa.jaxb.tools.version}</version>
						</plugin>
					</plugins>
				</configuration>
				<executions>
					<!-- To introduce a new schema/model:
						1. Copy/paste this entire execution
						2. Give the new execution a new id, e.g. xjc-v2
						3. Configure generatePackage for the version, e.g. xxx.api.v2.transfer
						4. Configure schemaDirectory for the version, e.g. xxx/model/v2
					-->
					<execution>
						<id>xjc-v1</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatePackage>gov.va.vetservices.lib.filemanager.api.v1.transfer</generatePackage>
							<schemaDirectory>${project.basedir}/src/main/resources/model/v1</schemaDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>